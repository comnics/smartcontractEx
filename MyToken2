pragma solidity ^0.4.20;

contract MyToken {
    
    string public name;         //Token name
    string public symbol;       //Token symbol
    uint8 public decimals = 0;
    
    uint256 public totalSupply;
    
    /* This creates an array with all balances */
    mapping (address => uint256) public balanceOf;
    

    /* Initializes contract with initial supply tokens to the creator of the contract */
    function MyToken(uint256 _initialSupply, string _name, string _symbol) public {
        balanceOf[msg.sender] = _initialSupply;              // Give the creator all initial tokens
        name = _name;
        symbol = _symbol;
    }

    /* Send coins */
    function transfer(address _to, uint256 _value) public returns (bool success) {
        require(balanceOf[msg.sender] >= _value);           	// Check if the sender has enough
        require(balanceOf[_to] + _value >= balanceOf[_to]); 	// Check for overflows
        
        balanceOf[msg.sender] -= _value;                    		// Subtract from the sender
        balanceOf[_to] += _value;                           		// Add the same to the recipient
        return true;
    }
}
